@page "/Exercises/Details/"
@inject HttpClient httpClient
@inject ILocalStorageService LocalStorageService
@inject NavigationManager navigationManager

<PageTitle>Exercise Details</PageTitle>

@if (exercise != null)
{
    <div class="exercise-container">
        <div class="exercise-details">
            <h2>@exercise.Name</h2>
            <p><strong>Body Part:</strong> @exercise.BodyPart</p>
            <p><strong>Equipment:</strong> @exercise.Equipment</p>
            <p><strong>Target:</strong> @exercise.Target</p>
            <p><strong>Secondary Muscles:</strong> @string.Join(", ", exercise.SecondaryMuscles)</p>
            <p><strong>Instructions:</strong></p>
            <ul>
                @foreach (var instruction in exercise.Instructions)
                {
                    <li>@instruction</li>
                }
            </ul>
        </div>
        <div class="exercise-gif">
            <img src="@exercise.GifUrl" alt="Exercise GIF" />
        </div>
    </div>
}
else
{
    <p>Loading...</p>
}

@code {
    public class Exercise
    {
        public int Id { get; set; }
        public string? Name { get; set; }
        public string? BodyPart { get; set; }
        public string? Equipment { get; set; }
        public string? GifUrl { get; set; }
        public string? Target { get; set; }
        public string?[]? SecondaryMuscles { get; set; }
        public string?[]? Instructions { get; set; }
        public bool IsApproved { get; set; }
    }

    [Parameter]
    public int Id { get; set; }

    public Exercise exercise { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await GetExerciseDetailsAsync();
    }

    private async Task GetExerciseDetailsAsync()
    {

        var response = await httpClient.GetAsync($"api/Exercises/Details/{Id}");

        var json = await response.Content.ReadAsStringAsync();

        if (response.IsSuccessStatusCode)
        {
            exercise = JsonConvert.DeserializeObject<Exercise>(json);
        }
        else
        {
            navigationManager.NavigateTo("/error");
        }
    }


}


<style>
    
    .exercise-container {
        display: flex;
        justify-content: space-between;
        margin-top: 20px;
    }

    .exercise-details {
        flex: 1;
        margin-right: 20px;
    }

    .exercise-details h2 {
        font-size: 24px;
        margin-bottom: 10px;
        color: #333; 
    }

    .exercise-details p {
        margin-bottom: 8px;
        color: #555; 
    }

    .exercise-details ul {
        margin-top: 0;
        padding-left: 20px;
    }

    .exercise-details li {
        margin-bottom: 6px;
    }

    .exercise-gif {
        flex: 1;
    }

    .exercise-gif img {
        max-width: 100%;
        height: auto;
        border-radius: 8px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }

    .loading-message {
        font-size: 20px;
        color: #777; 
        text-align: center;
        margin-top: 50px;
    }

    .error-message {
        font-size: 20px;
        color: #c00; 
        text-align: center;
        margin-top: 50px;
    }
</style>
